{
  "title": "Wprowadzenie",
  "header": "Moja przygoda z programowaniem zaczęła się w roku 2021. W tym czasie skupiłem się na rozwoju w kierunku full-stack developera. Moją najmocniejszą stroną wciąż jest frontend, jednak w stopniu średnio-zaawansowanym poznałem Nodejs i frameworki oparte na nim takie jak Express i Nest. W połączeniu ze znajomością baz danych SQL i NoSQL pozwala mi to tworzyć aplikacje full-stackowe. Podczas mojej nauki poznałem również CI/CD oparte na CircleCI jak i podstawy Dockera.",
  "skillsHeader": "Co umiem",
  "headings": [
    {
      "name": "Dobrze zaprojektowane",
      "description": "Strony które tworzę są zawsze projektowane przeze mnie od samego początku. Najczęściej wykorzystuję w tym celu Figmę. Często sprawdzam strony designerskie i blogi żeby być na bieżąco z trendami panującymi w tym szybko zmieniającym się środowisku."
    },
    {
      "name": "Szybkie",
      "description": "Stworzone przeze mnie strony są optymalizowane podczas developmentu przeze mnie jak i podczas tworzenia strony produkcyjnej za pomocą technologii zawartych w bibliotekach, które wykorzystuje. Ostatnimi czasy cenię sobie szczególnie Gatsby.js, który pozwala tworzyć niesamowicie szybkie strony internetowe."
    },
    {
      "name": "SEO",
      "description": "SEO często jest kojarzone z procesem optymalizacji witryny, jednak w praktyce daje dużo więcej możliwości. To zarówno poprawa technicznych aspektów witryny, rozbudowa jej treści, jak i zdobywanie linków pozycjonujących z innych domen w sieci."
    },
    {
      "name": "Responsywne",
      "description": "Tworzę strony z podejściem \"Mobile First\". Oznacza to że rozpoczynam projektowanie od najmniejszych urządzeń i rozdzielczości, aby doświadczenie z użytkowania na nich było jak najlepsze. Następnie wraz ze wzrostem rozdzielczości stale dokładam nowe funkcjonalności oraz rozbudowuje aktualny układ strony."
    }
  ],
  "skills": [
    {
      "name": "HTML",
      "description": "HTML pozwala opisać strukturę informacji zawartych wewnątrz strony internetowej, nadając odpowiednie znaczenie semantyczne poszczególnym fragmentom tekstu – formując hiperłącza, akapity, nagłówki, listy – oraz osadza w tekście dokumentu obiekty plikowe np. multimedia bądź elementy baz danych np. interaktywne formularze danych."
    },
    {
      "name": "CSS",
      "description": "Kaskadowe arkusze stylów – język służący do opisu formy prezentacji stron WWW. CSS został opracowany przez organizację W3C w 1996 r. jako potomek języka DSSSL przeznaczony do używania w połączeniu z SGML-em. Pierwszy szkic CSS zaproponował w 1994 r. Håkon Wium Lie."
    },
    {
      "name": "JavaScript",
      "description": "Najczęściej spotykanym zastosowaniem języka JavaScript są strony internetowe. Skrypty te służą najczęściej do zapewnienia interakcji poprzez reagowanie na zdarzenia, walidacji danych wprowadzanych w formularzach lub tworzenia złożonych efektów wizualnych. Skrypty JavaScriptu uruchamiane przez strony internetowe mają znacznie ograniczony dostęp do komputera użytkownika."
    },
    {
      "name": "TypeScript",
      "description": "TypeScript – wolny i otwartoźródłowy język programowania stworzony przez firmę Microsoft jako nadzbiór języka JavaScript. Umożliwia on opcjonalne statyczne typowanie oraz programowanie zorientowane obiektowo oparte na klasach."
    },
    {
      "name": "React",
      "description": "React.js – biblioteka języka programowania JavaScript, która wykorzystywana jest do tworzenia interfejsów graficznych aplikacji internetowych. Została stworzona przez Jordana Walke, programistę Facebooka, a zainspirowana przez rozszerzenie języka PHP - XHP."
    },
    {
      "name": "Gatsby",
      "description": "Gatsby to framework pozwalający na budowanie błyskawicznie działających stron i aplikacji internetowych opartych o React JS. Pozwala on w prosty sposób zoptymalizować kod strony www. Unikalność Gatsby polega na tym, że łączy on zalety wielu innych rozwiązań."
    },
    {
      "name": "Node.js",
      "description": "Node.js to wieloplatformowe środowisko uruchomieniowe o otwartym kodzie do tworzenia aplikacji typu server-side napisanych w języku JavaScript. Przyczynił się do stworzenia paradygmatu „JavaScript everywhere” umożliwiając programistom tworzenie aplikacji w obrębie jednego języka programowania zamiast polegania na odrębnych po stronie serwerowej."
    },
    {
      "name": "Mongodb",
      "description": "MongoDB – otwarty, nierelacyjny system zarządzania bazą danych napisany w języku C++. Charakteryzuje się dużą skalowalnością, wydajnością oraz brakiem ściśle zdefiniowanej struktury obsługiwanych baz danych."
    },
    {
      "name": "GraphQL",
      "description": "GraphQL to język zapytań i manipulacji danymi typu open source dla interfejsów API oraz środowisko wykonawcze do wypełniania zapytań z istniejącymi danymi. GraphQL został opracowany wewnętrznie przez Facebook w 2012 roku."
    },
    {
      "name": "Material UI",
      "description": "Reactowe komponenty oparte na metodologii Material Design dla szybszego i łatwiejszego tworzenia stron internetowych."
    },
    {
      "name": "NPM",
      "description": "Npm – domyślny manager pakietów dla środowiska Node.js, może być także używany do zarządzania warstwą front-end aplikacji WWW."
    },
    {
      "name": "Git",
      "description": "Git – rozproszony system kontroli wersji. Stworzył go Linus Torvalds jako narzędzie wspomagające rozwój jądra Linux. Git stanowi wolne oprogramowanie i został opublikowany na licencji GNU GPL w wersji 2."
    },
    {
      "name": "SASS",
      "description": "Sass jest językiem skryptowym preprocesora, który jest interpretowany lub kompilowany w kaskadowe arkusze stylów. SassScript jest samym językiem skryptowym. Sass składa się z dwóch składni. Oryginalna składnia, zwana „składnią wciętą”, używa składni podobnej do Haml."
    },
    {
      "name": "Redux",
      "description": "Redux to biblioteka JavaScript typu open source do zarządzania stanem aplikacji. Jest najczęściej używany w bibliotekach takich jak React lub Angular do budowania interfejsów użytkownika. Podobnie jak architektura Flux na Facebooku, została stworzona przez Dana Abramova i Andrew Clarka."
    },
    {
      "name": "Jest",
      "description": "Jest to framework do testowania JavaScript obsługiwany przez Facebook, Inc. zaprojektowany i zbudowany przez Christopha Nakazawę z naciskiem na prostotę i obsługę dużych aplikacji internetowych. Działa z projektami używającymi Babel, TypeScript, Node.js, React, Angular, Vue.js i Svelte."
    },
    {
      "name": "CircleCI",
      "description": "CircleCI to platforma do ciągłej integracji i ciągłego dostarczania, której można używać do wdrażania praktyk DevOps."
    },
    {
      "name": "Nest",
      "description": "Nest JS to framework, który pomaga budować aplikacje oparte na Nodejs. Framework Nest jest zbudowany przy użyciu TypeScript. Umożliwia tworzenie wysoce skalowalnych i testowalnych aplikacji. Zbudowany na bazie Expressa"
    },
    {
      "name": "Express",
      "description": "Express.js, lub po prostu Express, to back-endowa platforma aplikacji webowych do budowania interfejsów API RESTful za pomocą Node.js, wydana jako darmowe i otwarte oprogramowanie na licencji MIT"
    },
    {
      "name": "Next",
      "description": "Next.js to framework do tworzenia stron internetowych typu open source stworzony przez Vercel, umożliwiający tworzenie aplikacji internetowych opartych na React z renderowaniem po stronie serwera i generowaniem statycznych stron internetowych."
    }
  ]
}
