{"version":3,"sources":["webpack:///./src/components/SvgLines.tsx","webpack:///./src/assets/styles/homePageStyles.ts","webpack:///./src/components/HomeContent.tsx","webpack:///./src/pages/index.tsx"],"names":["HomeLine","StyledHomeSvg","viewBox","fill","xmlns","path","initial","opacity","pathLength","pathOffset","animate","transition","duration","d","stroke","stroke-opacity","stroke-width","styled","svg","Wrapper","motion","div","StyledSpan","span","ContentWrapper","Button","button","ImageWrapper","HomeContent","t","useTranslation","variants","contentWrapperVariants","h1","fadeIn","h2","fade","to","p","className","HomePage","data","SEO","fluid","file","childImageSharp","alt"],"mappings":"oLAIaA,EAAW,WACtB,OACE,kBAACC,EAAa,CACZC,QAAQ,eACRC,KAAK,OACLC,MAAM,8BAEN,kBAAC,IAAOC,KAAI,CACVC,QAAS,CAAEC,QAAS,EAAGC,WAAY,EAAGC,WAAY,GAClDC,QAAS,CAAEH,QAAS,EAAGC,WAAY,EAAGC,WAAY,GAClDE,WAAY,CAAEC,SAAU,GACxBC,EAAE,wGACFC,OAAO,UACPC,iBAAe,MACfC,eAAa,SAyBff,EAAgBgB,IAAOC,IAAG,6EAAVD,CAAU,0CCxCnBE,GD6CYF,IAAOC,IAAG,gFAAVD,CAAU,oDC7CZA,YAAOG,IAAOC,KAAI,6EAAlBJ,CAAkB,2PAmB5BK,EAAaL,IAAOM,KAAI,gFAAXN,CAAW,oEAMxBO,EAAiBP,YAAOG,IAAOC,KAAI,oFAAlBJ,CAAkB,wuBA2ClCK,GAoBDG,EAASR,YAAOG,IAAOM,QAAO,4EAArBT,CAAqB,+WAyB9BU,EAAeV,YAAOG,IAAOC,KAAI,kFAAlBJ,CAAkB,oK,iCC5E/BW,EA3BK,WAClB,IAAQC,EAAMC,YAAe,QAArBD,EAER,OACE,kBAACL,EAAc,CACbO,SAAUC,IACV1B,QAAQ,SACRI,QAAQ,QAER,kBAAC,IAAOuB,GAAE,CAACF,SAAUG,KAAQ,qBAC7B,kBAAC,IAAOC,GAAE,CAACJ,SAAUG,KAAQ,sBAE7B,kBAAC,IAAO,CAACE,MAAI,EAACC,GAAG,SACf,kBAACZ,EAAM,CAACM,SAAUG,KAASL,EAAE,YAG/B,kBAAC,IAAO,CAACO,MAAI,EAACC,GAAG,YACf,kBAAC,IAAOC,EAAC,CAACP,SAAUG,KACjBL,EAAE,kBAAmB,IACtB,kBAACP,EAAU,CAACiB,UAAU,SAAQ,IAAEV,EAAE,QAAQ,KAAe,IACxDA,EAAE,uB,YCIEW,UA3BuC,SAAH,GAAiB,IAAXC,EAAI,EAAJA,KACvD,OACE,oCACE,kBAACC,EAAA,EAAG,MACJ,kBAACvB,EAAO,KACN,kBAAC,EAAQ,MACT,kBAAC,EAAW,MACZ,kBAACQ,EAAY,CAACI,SAAUG,IAAQ5B,QAAQ,SAASI,QAAQ,QACvD,kBAAC,IAAG,CAACiC,MAAOF,EAAKG,KAAKC,gBAAgBF,MAAOG,IAAI","file":"component---src-pages-index-tsx-fbad316c4abfef37fb9c.js","sourcesContent":["import { motion } from \"framer-motion\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nexport const HomeLine = () => {\n  return (\n    <StyledHomeSvg\n      viewBox=\"0 0 1440 452\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <motion.path\n        initial={{ opacity: 0, pathLength: 0, pathOffset: 1 }}\n        animate={{ opacity: 1, pathLength: 1, pathOffset: 0 }}\n        transition={{ duration: 2 }}\n        d=\"M-28 2C25.7905 251.373 337 443 460 446C583 449 874 265 1028 294.5C1182 324 1254.05 438.294 1478 430.5\"\n        stroke=\"#FF00FF\"\n        stroke-opacity=\"0.4\"\n        stroke-width=\"10\"\n      />\n    </StyledHomeSvg>\n  )\n}\n\nexport const ContactLine = () => {\n  return (\n    <StyledContactSvg\n      viewBox=\"0 0 1884 703\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <motion.path\n        initial={{ opacity: 0, pathLength: 0 }}\n        animate={{ opacity: 1, pathLength: 1 }}\n        transition={{ duration: 2 }}\n        d=\"M1.5 5.5C1.5 5.5 234 74 421 207.5C608 341 459 177 646 186.5C833 196 751 238 1046.5 436.5C1342 635 1304 419.5 1502.5 520.5C1701 621.5 1882 698 1882 698\"\n        stroke=\"#00C896\"\n        stroke-width=\"10\"\n      />\n    </StyledContactSvg>\n  )\n}\n\nconst StyledHomeSvg = styled.svg`\n  position: absolute;\n  left: 0;\n  z-index: -1;\n`\nconst StyledContactSvg = styled.svg`\n  width: 100%;\n  position: absolute;\n  left: 0;\n  z-index: 1;\n`\n","import { motion } from \"framer-motion\"\nimport styled from \"styled-components\"\n\nexport const Wrapper = styled(motion.div)`\n  min-height: 82vh;\n  padding: 1rem;\n  padding-bottom: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 5rem;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  @media (min-width: 1200px) {\n    justify-content: center;\n  }\n`\n\nexport const StyledSpan = styled.span`\n  color: var(--green);\n  font-weight: 700;\n  transition: color 0.5s ease;\n`\n\nexport const ContentWrapper = styled(motion.div)`\n  color: var(--white);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  margin-top: 2rem;\n  text-align: center;\n\n  h1 {\n    font-size: 4.5rem;\n    margin-bottom: 3rem;\n\n    @media (min-width: 768px) {\n      margin-bottom: 4rem;\n    }\n    @media (min-width: 1360px) {\n      font-size: 6rem;\n    }\n  }\n  h2 {\n    font-size: 4rem;\n    margin-bottom: 5rem;\n    @media (min-width: 768px) {\n      margin-bottom: 5rem;\n      margin-bottom: 7rem;\n    }\n    @media (min-width: 1360px) {\n      font-size: 5rem;\n      margin-bottom: 7rem;\n    }\n  }\n  p {\n    font-size: 1.8rem;\n    margin-bottom: 2rem;\n    color: var(--white);\n    transition: color 0.5s ease;\n\n    &:hover {\n      color: var(--green);\n    }\n\n    &:hover ${StyledSpan} {\n      color: var(--white);\n    }\n\n    @media (min-width: 1360px) {\n      font-size: 2rem;\n    }\n  }\n\n  @media (min-width: 768px) {\n    order: 2;\n    flex: 1;\n    align-self: flex-start;\n  }\n\n  @media (min-width: 1024px) {\n    max-width: 620px;\n  }\n`\n\nexport const Button = styled(motion.button)`\n  border: 3px solid var(--green);\n  background-color: transparent;\n  color: var(--white);\n  padding: 2rem 3rem;\n  margin-bottom: 3rem;\n  cursor: pointer;\n  transition: color 0.5s ease, border-color 0.5s ease;\n\n  &:hover {\n    color: var(--green);\n    border-color: var(--white);\n  }\n\n  @media (min-width: 768px) {\n    margin-bottom: 5rem;\n    padding: 2rem 5rem;\n  }\n\n  @media (min-width: 1360px) {\n    padding: 2rem 7rem;\n    margin-bottom: 7rem;\n  }\n`\n\nexport const ImageWrapper = styled(motion.div)`\n  width: 90%;\n  max-width: 650px;\n\n  .gatsby-image-wrapper {\n    max-width: 650px;\n    max-height: 80vh;\n  }\n\n  @media (min-width: 768px) {\n    flex: 1;\n  }\n\n  @media (min-width: 1360px) {\n    margin-right: 10%;\n  }\n`\n","import React from \"react\"\nimport { motion } from \"framer-motion\"\nimport { contentWrapperVariants, fadeIn } from \"../utils/animations/variants\"\nimport {\n  Button,\n  ContentWrapper,\n  StyledSpan,\n} from \"../assets/styles/homePageStyles\"\nimport { useTranslation } from \"react-i18next\"\n\n// @ts-expect-error\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nconst HomeContent = () => {\n  const { t } = useTranslation(\"home\")\n\n  return (\n    <ContentWrapper\n      variants={contentWrapperVariants}\n      initial=\"hidden\"\n      animate=\"show\"\n    >\n      <motion.h1 variants={fadeIn}>Mateusz Koprowicz</motion.h1>\n      <motion.h2 variants={fadeIn}>Frontend Developer</motion.h2>\n\n      <AniLink fade to=\"/info\">\n        <Button variants={fadeIn}>{t(\"button\")}</Button>\n      </AniLink>\n\n      <AniLink fade to=\"/contact\">\n        <motion.p variants={fadeIn}>\n          {t(\"firstParagraph\")}{\" \"}\n          <StyledSpan className=\"green\"> {t(\"span\")} </StyledSpan>{\" \"}\n          {t(\"secondParagraph\")}\n        </motion.p>\n      </AniLink>\n    </ContentWrapper>\n  )\n}\n\nexport default HomeContent\n","import React from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { fadeIn } from \"../utils/animations/variants\"\nimport { HomeLine } from \"../components/SvgLines\"\nimport { ImageWrapper, Wrapper } from \"../assets/styles/homePageStyles\"\nimport { DataPropsImage } from \"../utils/types/DataPropsImage\"\nimport HomeContent from \"../components/HomeContent\"\nimport SEO from \"../components/SEO\"\n\nconst HomePage: React.FC<PageProps<DataPropsImage>> = ({ data }) => {\n  return (\n    <>\n      <SEO />\n      <Wrapper>\n        <HomeLine />\n        <HomeContent />\n        <ImageWrapper variants={fadeIn} initial=\"hidden\" animate=\"show\">\n          <Img fluid={data.file.childImageSharp.fluid} alt=\"Subrealistic man\" />\n        </ImageWrapper>\n      </Wrapper>\n    </>\n  )\n}\n\nexport const query = graphql`\n  {\n    file(name: { eq: \"home\" }) {\n      childImageSharp {\n        fluid(maxWidth: 650, maxHeight: 800, quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nexport default HomePage\n"],"sourceRoot":""}